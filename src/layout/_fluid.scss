@mixin _fluid($property, $lists...) {
  $context: 16;
  $length: length($lists);

  @if _is-num(nth($lists, $length)) {
    $context: _strip-unit(nth($lists, $length));
    $length: $length - 1;
  }

  @for $i from 1 through $length - 1 {
    $x1: nth(nth($lists, $i), 1);
    $y1: nth(nth($lists, $i), 2);
    $x2: nth(nth($lists, $i + 1), 1);
    $y2: nth(nth($lists, $i + 1), 2);
    $sx1: _strip-unit($x1);
    $sy1: _strip-unit($y1);
    $sx2: _strip-unit($x2);
    $sy2: _strip-unit($y2);
    $ux1: unit($x1);
    $uy1: unit($y1);
    $ux2: unit($x2);
    $uy2: unit($y2);

    @if $ux1 != $ux2 or $uy1 != $uy2 {
      @error 'A pair of screen width or font size must be same unit.';
    }

    $has-em-context: $context and $uy1 == 'em';

    $sx1: if($ux1 != 'px', $sx1 * 16, $sx1);
    $sy1: if($uy1 != 'px', $sy1 * if($uy1 == 'rem', 16, $context), $sy1);
    $sx2: if($ux2 != 'px', $sx2 * 16, $sx2);
    $sy2: if($uy2 != 'px', $sy2 * if($uy2 == 'rem', 16, $context), $sy2);

    $a: ($sy2 - $sy1) / ($sx2 - $sx1) * 100vw;
    $b: ($sy1 - ($sy2 - $sy1) / ($sx2 - $sx1) * $sx1);
    $b: if($uy1 != 'rem', $b / $context + 'em', $b / 16 + 'rem');
    
    @if $i == 1 {
      #{$property}: if($uy1 != 'rem', _em($y1, $context), _rem($y1));
    }

    @include _media($x1) {
      #{$property}: if($b == 0, $a, calc(#{$a} + #{$b}));
    }

    @if $i == $length - 1 {
      @include _media($x2) {
        #{$property}: if($uy2 != 'rem', _em($y2, $context), _rem($y2));
      }
    }
  }
}